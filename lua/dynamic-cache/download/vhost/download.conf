# lua 文件的位置
lua_package_path "D:/software/openresty-1.15.8.3-win64/conf/lua_src/?.lua;;D:/software/openresty-1.15.8.3-win64/lualib/?.lua;;";
# nginx启动阶段时执行的脚本，可以不加
init_by_lua_file 'conf/lua_src/Init.lua';
server {
 
    listen       81;
    server_name  localhost;
 
    location / {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  Connection  "Keep-Alive";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
		proxy_pass  http://127.0.0.1:8085;
    }

	#固定首页
    location = / {
		default_type text/html;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  Connection  "Keep-Alive";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
		content_by_lua 'cache.cache()';
		 
    }

	#  代理的html
	location ~* .(html)$  {
		default_type text/html;
		content_by_lua 'cache.cache()';
	}
	
	# 代理的html 发起子请求
	location ~* .(htmls)$  {
		proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  Connection  "Keep-Alive";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
		proxy_pass  http://127.0.0.1:8085;
	}
	
	#得到路径前缀
    location = /getImgKey {
		default_type text/html;
       
		content_by_lua_block {
			ngx.say("{\"result\":true,\"message\":\"查看成功\",\"data\":{\"imgBase\":\"https://d2.msjzl120.com/\",\"key\":\"10844680\"}}")
		}
		 
    }
}
